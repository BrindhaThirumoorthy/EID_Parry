<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.7 on win32)" generated="20241129 13:13:48.438" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\EID_Replay\EID_Parry\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 13:13:49.659" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20241129 13:13:49.659" endtime="20241129 13:13:49.659"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 13:13:49.661" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20241129 13:13:49.660" endtime="20241129 13:13:49.661"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241129 13:13:49.661" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20241129 13:13:49.661" endtime="20241129 13:13:49.661"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20241129 13:13:49.662" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20241129 13:13:49.664" level="INFO" html="true">Created directory '&lt;a href="file://C:\EID_Replay\EID_Parry\Output\pabot_results\0\Screenshot"&gt;C:\EID_Replay\EID_Parry\Output\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20241129 13:13:49.662" endtime="20241129 13:13:49.664"/>
</kw>
<status status="PASS" starttime="20241129 13:13:49.661" endtime="20241129 13:13:49.664"/>
</kw>
<status status="PASS" starttime="20241129 13:13:49.660" endtime="20241129 13:13:49.664"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241129 13:13:49.665" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20241129 13:13:49.665" endtime="20241129 13:13:49.665"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20241129 13:13:49.666" endtime="20241129 13:13:49.666"/>
</kw>
<msg timestamp="20241129 13:13:49.666" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20241129 13:13:49.666" endtime="20241129 13:13:49.667"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20241129 13:13:54.239" level="INFO">&amp;{browser_information} = { browser_version=131.0.6778.86 | driver_version=131.0.6778.85  }</msg>
<status status="PASS" starttime="20241129 13:13:49.668" endtime="20241129 13:13:54.239"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20241129 13:13:54.240" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20241129 13:13:54.240" endtime="20241129 13:13:54.240"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20241129 13:13:54.241" level="INFO">Set suite metadata 'test_browser_version' to value '131.0.6778.86'.</msg>
<status status="PASS" starttime="20241129 13:13:54.240" endtime="20241129 13:13:54.241"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20241129 13:13:54.242" level="INFO">Set suite metadata 'test_driver_version' to value '131.0.6778.85 '.</msg>
<status status="PASS" starttime="20241129 13:13:54.241" endtime="20241129 13:13:54.242"/>
</kw>
<status status="PASS" starttime="20241129 13:13:49.667" endtime="20241129 13:13:54.242"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241129 13:13:54.243" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20241129 13:13:54.242" endtime="20241129 13:13:54.243"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20241129 13:13:54.243" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20241129 13:13:54.243" endtime="20241129 13:13:54.243"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241129 13:13:54.244" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20241129 13:13:54.244" endtime="20241129 13:13:54.244"/>
</kw>
<msg timestamp="20241129 13:13:54.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241129 13:13:54.243" endtime="20241129 13:13:54.244"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20241129 13:13:54.244" endtime="20241129 13:13:54.244"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241129 13:13:54.244" endtime="20241129 13:13:54.244"/>
</kw>
<status status="PASS" starttime="20241129 13:13:54.242" endtime="20241129 13:13:54.245"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20241129 13:13:54.247" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20241129 13:13:54.246" endtime="20241129 13:13:54.247"/>
</kw>
<msg timestamp="20241129 13:13:54.247" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20241129 13:13:54.245" endtime="20241129 13:13:54.247"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241129 13:13:54.247" level="INFO">Length is 1</msg>
<msg timestamp="20241129 13:13:54.248" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20241129 13:13:54.247" endtime="20241129 13:13:54.248"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241129 13:13:54.248" endtime="20241129 13:13:54.248"/>
</kw>
<msg timestamp="20241129 13:13:54.248" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20241129 13:13:54.248" endtime="20241129 13:13:54.248"/>
</kw>
<msg timestamp="20241129 13:13:54.248" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20241129 13:13:54.245" endtime="20241129 13:13:54.248"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 13:13:54.249" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000210587BB5C0&gt;</msg>
<status status="PASS" starttime="20241129 13:13:54.249" endtime="20241129 13:13:54.249"/>
</kw>
<msg timestamp="20241129 13:13:54.249" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000210587BB5C0&gt;</msg>
<status status="PASS" starttime="20241129 13:13:54.249" endtime="20241129 13:13:54.249"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20241129 13:13:54.250" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20241129 13:13:54.250" endtime="20241129 13:13:54.250"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241129 13:13:54.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241129 13:13:54.250" endtime="20241129 13:13:54.250"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20241129 13:13:54.251" endtime="20241129 13:13:54.251"/>
</kw>
<status status="NOT RUN" starttime="20241129 13:13:54.250" endtime="20241129 13:13:54.251"/>
</iter>
<status status="NOT RUN" starttime="20241129 13:13:54.250" endtime="20241129 13:13:54.251"/>
</for>
<status status="PASS" starttime="20241129 13:13:54.249" endtime="20241129 13:13:54.251"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20241129 13:13:54.251" endtime="20241129 13:13:54.251"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241129 13:13:54.252" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000210587BB5C0&gt;</msg>
<status status="PASS" starttime="20241129 13:13:54.251" endtime="20241129 13:13:54.252"/>
</kw>
<status status="PASS" starttime="20241129 13:13:54.245" endtime="20241129 13:13:54.252"/>
</kw>
<status status="PASS" starttime="20241129 13:13:49.667" endtime="20241129 13:13:54.252"/>
</kw>
<status status="PASS" starttime="20241129 13:13:49.667" endtime="20241129 13:13:54.252"/>
</kw>
<status status="PASS" starttime="20241129 13:13:49.665" endtime="20241129 13:13:54.252"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20241129 13:13:54.252" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20241129 13:13:54.252" endtime="20241129 13:13:54.252"/>
</kw>
<status status="PASS" starttime="20241129 13:13:49.658" endtime="20241129 13:13:54.253"/>
</kw>
<suite id="s1-s1" name="Test Create Rental Invoice" source="C:\EID_Replay\EID_Parry\Tests\Test_Create_Rental_Invoice.robot">
<kw name="System Logon" library="create_rental_invoice" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('SAP_SERVER')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20241129 13:13:54.923" level="INFO">Sym.Dev.SAP_SERVER: C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe</msg>
<msg timestamp="20241129 13:13:54.924" level="INFO">Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe"</msg>
<status status="PASS" starttime="20241129 13:13:54.923" endtime="20241129 13:13:54.937"/>
</kw>
<kw name="Connect To Session" library="SAP_Tcode_Library">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20241129 13:13:54.937" endtime="20241129 13:13:54.987"/>
</kw>
<kw name="Open Connection" library="SAP_Tcode_Library">
<arg>${symvar('Rental_Connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20241129 13:13:54.988" level="INFO">Sym.Dev.Rental_Connection: EID sandbox</msg>
<status status="PASS" starttime="20241129 13:13:54.988" endtime="20241129 13:13:55.690"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('Rental_Client')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20241129 13:13:55.691" level="INFO">Sym.Dev.Rental_Client: 900</msg>
<msg timestamp="20241129 13:13:55.727" level="INFO">Typing text '900' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20241129 13:13:55.690" endtime="20241129 13:13:55.727"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('Rental_User')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20241129 13:13:55.728" level="INFO">Sym.Dev.Rental_User: bcssupport1</msg>
<msg timestamp="20241129 13:13:55.744" level="INFO">Typing text 'bcssupport1' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20241129 13:13:55.728" endtime="20241129 13:13:55.744"/>
</kw>
<kw name="Input Password" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>%{RENTAL_PASSWORD}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20241129 13:13:55.753" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20241129 13:13:55.744" endtime="20241129 13:13:55.753"/>
</kw>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20241129 13:13:55.753" endtime="20241129 13:13:55.877"/>
</kw>
<kw name="Multiple Logon Handling" library="SAP_Tcode_Library">
<arg>wnd[1]</arg>
<arg>wnd[1]/usr/radMULTI_LOGON_OPT2</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<msg timestamp="20241129 13:13:56.587" level="INFO">Multiple logon exists</msg>
<status status="PASS" starttime="20241129 13:13:55.877" endtime="20241129 13:13:56.587"/>
</kw>
<status status="PASS" starttime="20241129 13:13:54.922" endtime="20241129 13:13:56.588"/>
</kw>
<test id="s1-s1-t1" name="Create the rental Invoice" line="8">
<kw name="Rental Invoice" library="create_rental_invoice">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nVF03</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20241129 13:13:56.589" endtime="20241129 13:13:56.779"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>element_id=wnd[0]/usr/ctxtVBRK-VBELN</arg>
<arg>text=707326112</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20241129 13:13:56.800" level="INFO">Typing text '707326112' into text field 'wnd[0]/usr/ctxtVBRK-VBELN'.</msg>
<status status="PASS" starttime="20241129 13:13:56.779" endtime="20241129 13:13:56.800"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>element_id=wnd[0]/mbar/menu[0]/menu[11]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20241129 13:13:56.800" endtime="20241129 13:13:57.052"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>element_id=wnd[1]/tbar[0]/btn[37]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20241129 13:13:57.052" endtime="20241129 13:13:57.378"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>time_=0.4 seconds</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241129 13:13:57.779" level="INFO">Slept 400 milliseconds</msg>
<status status="PASS" starttime="20241129 13:13:57.379" endtime="20241129 13:13:57.779"/>
</kw>
<kw name="Unselect Checkbox" library="SAP_Tcode_Library">
<arg>element_id=wnd[2]/usr/sub/1[0,0]/sub/1/2[0,0]/sub/1/2/4[0,4]/chk[1,4]</arg>
<doc>Removes selection of checkbox identified by locator.
Does nothing if the checkbox is not selected.</doc>
<status status="PASS" starttime="20241129 13:13:57.779" endtime="20241129 13:13:57.789"/>
</kw>
<kw name="Unselect Checkbox" library="SAP_Tcode_Library">
<arg>element_id=wnd[2]/usr/sub/1[0,0]/sub/1/2[0,0]/sub/1/2/5[0,5]/chk[1,5]</arg>
<doc>Removes selection of checkbox identified by locator.
Does nothing if the checkbox is not selected.</doc>
<status status="PASS" starttime="20241129 13:13:57.789" endtime="20241129 13:13:57.797"/>
</kw>
<kw name="Unselect Checkbox" library="SAP_Tcode_Library">
<arg>element_id=wnd[2]/usr/sub/1[0,0]/sub/1/2[0,0]/sub/1/2/6[0,6]/chk[1,6]</arg>
<doc>Removes selection of checkbox identified by locator.
Does nothing if the checkbox is not selected.</doc>
<status status="PASS" starttime="20241129 13:13:57.797" endtime="20241129 13:13:57.805"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>element_id=wnd[2]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20241129 13:13:57.805" endtime="20241129 13:13:58.155"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>element_id=wnd[2]/tbar[0]/btn[8]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20241129 13:13:58.156" endtime="20241129 13:13:58.701"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>element_id=wnd[0]/mbar/menu[0]/menu[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20241129 13:13:58.702" endtime="20241129 13:13:58.876"/>
</kw>
<kw name="Extract Numeric" library="SAP_Tcode_Library">
<var>${spool_id}</var>
<arg>data=wnd[0]/sbar/pane[0]</arg>
<msg timestamp="20241129 13:13:58.877" level="INFO">${spool_id} = 0</msg>
<status status="PASS" starttime="20241129 13:13:58.877" endtime="20241129 13:13:58.877"/>
</kw>
<status status="PASS" starttime="20241129 13:13:56.588" endtime="20241129 13:13:58.878"/>
</kw>
<tag>Regression</tag>
<tag>VF01</tag>
<status status="PASS" starttime="20241129 13:13:56.588" endtime="20241129 13:13:58.878"/>
</test>
<status status="PASS" starttime="20241129 13:13:54.253" endtime="20241129 13:13:58.879"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">131.0.6778.86</meta>
<meta name="test_driver_version">131.0.6778.85 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.3.5,attrs==24.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.8.30,cffi==1.17.1,chardet==5.2.0,charset-normalizer==3.4.0,click==8.1.7,colorama==0.4.6,comtypes==1.4.8,cryptography==43.0.3,defusedxml==0.7.1,dill==0.3.9,docutils==0.21.2,et_xmlfile==2.0.0,exceptiongroup==1.2.2,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.10,isort==5.13.2,Jinja2==3.1.4,jira==3.8.0,jsonpath-ng==1.7.0,jsonschema==4.23.0,jsonschema-specifications==2024.10.1,lazy-object-proxy==1.10.0,lxml==5.3.0,markdown-it-py==3.0.0,MarkupSafe==3.0.2,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,numpy==2.1.3,oauthlib==3.2.2,openpyxl==3.1.5,outcome==1.3.0.post0,packaging==24.2,pandas==2.2.3,pathspec==0.11.2,pillow==11.0.0,pip==24.3.1,platformdirs==4.3.6,ply==3.11,pycparser==2.22,Pygments==2.18.0,pylint==3.3.1,PySocks==1.7.1,python-dateutil==2.9.0.post0,pytz==2024.2,pywin32==308,pywinauto==0.6.8,PyYAML==6.0.2,referencing==0.35.1,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.9.4,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.21.0,selenium==4.9.1,setuptools==75.6.0,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.6,tomli==2.0.2,tomlkit==0.13.2,trio==0.27.0,trio-websocket==0.11.1,typing_extensions==4.12.2,tzdata==2024.2,urllib3==2.2.3,wheel==0.45.1,wrapt==1.17.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20241129 13:13:49.203" endtime="20241129 13:13:59.042"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Regression</stat>
<stat pass="1" fail="0" skip="0">VF01</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test Create Rental Invoice">Tests.Test Create Rental Invoice</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
