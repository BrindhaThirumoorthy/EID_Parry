<?xml version="1.0" encoding="utf-8"?>
<robot generated="20241203 18:11:01.721" generator="Rebot 6.0.2 (Python 3.12.7 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="C:\EID_Replay\EID_Parry\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20241203 18:10:45.666">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20241203 18:10:45.666" starttime="20241203 18:10:45.665" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20241203 18:10:45.667">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20241203 18:10:45.667" starttime="20241203 18:10:45.666" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20241203 18:10:45.667">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20241203 18:10:45.667" starttime="20241203 18:10:45.667" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20241203 18:10:45.668">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20241203 18:10:45.669">
       Created directory '&lt;a href="file://C:\EID_Replay\EID_Parry\Output\a891b042-0f8c-4fa4-9094-00778bb61755\pabot_results\0\Screenshot"&gt;C:\EID_Replay\EID_Parry\Output\a891b042-0f8c-4fa4-9094-00778bb61755\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20241203 18:10:45.669" starttime="20241203 18:10:45.667" status="PASS"/>
     </kw>
     <status endtime="20241203 18:10:45.669" starttime="20241203 18:10:45.667" status="PASS"/>
    </kw>
    <status endtime="20241203 18:10:45.669" starttime="20241203 18:10:45.666" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20241203 18:10:45.670">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20241203 18:10:45.670" starttime="20241203 18:10:45.669" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20241203 18:10:45.671" starttime="20241203 18:10:45.670" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20241203 18:10:45.671">
      ${web_test_check} = True
     </msg>
     <status endtime="20241203 18:10:45.671" starttime="20241203 18:10:45.670" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20241203 18:10:50.645">
         &amp;{browser_information} = { browser_version=131.0.6778.86 | driver_version=131.0.6778.85  }
        </msg>
        <status endtime="20241203 18:10:50.645" starttime="20241203 18:10:45.672" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20241203 18:10:50.646">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20241203 18:10:50.646" starttime="20241203 18:10:50.646" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20241203 18:10:50.647">
         Set suite metadata 'test_browser_version' to value '131.0.6778.86'.
        </msg>
        <status endtime="20241203 18:10:50.647" starttime="20241203 18:10:50.646" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20241203 18:10:50.648">
         Set suite metadata 'test_driver_version' to value '131.0.6778.85 '.
        </msg>
        <status endtime="20241203 18:10:50.648" starttime="20241203 18:10:50.647" status="PASS"/>
       </kw>
       <status endtime="20241203 18:10:50.648" starttime="20241203 18:10:45.672" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20241203 18:10:50.649">
         ${global_browser_options} = None
        </msg>
        <status endtime="20241203 18:10:50.649" starttime="20241203 18:10:50.648" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20241203 18:10:50.649">
         ${docker_check} = not_found
        </msg>
        <status endtime="20241203 18:10:50.649" starttime="20241203 18:10:50.649" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20241203 18:10:50.650">
          Not executing on Docker
         </msg>
         <status endtime="20241203 18:10:50.650" starttime="20241203 18:10:50.650" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20241203 18:10:50.650">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20241203 18:10:50.650" starttime="20241203 18:10:50.649" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20241203 18:10:50.650" starttime="20241203 18:10:50.650" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20241203 18:10:50.651" starttime="20241203 18:10:50.650" status="NOT RUN"/>
       </kw>
       <status endtime="20241203 18:10:50.651" starttime="20241203 18:10:50.648" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20241203 18:10:50.653">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20241203 18:10:50.653" starttime="20241203 18:10:50.652" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20241203 18:10:50.653">
          ${docker_check} = False
         </msg>
         <status endtime="20241203 18:10:50.653" starttime="20241203 18:10:50.651" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20241203 18:10:50.654">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20241203 18:10:50.654">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20241203 18:10:50.654" starttime="20241203 18:10:50.653" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20241203 18:10:50.654" starttime="20241203 18:10:50.654" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20241203 18:10:50.654">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20241203 18:10:50.654" starttime="20241203 18:10:50.654" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20241203 18:10:50.655">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20241203 18:10:50.655" starttime="20241203 18:10:50.651" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20241203 18:10:50.655">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000020A4E110800&gt;
         </msg>
         <status endtime="20241203 18:10:50.655" starttime="20241203 18:10:50.655" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20241203 18:10:50.655">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000020A4E110800&gt;
        </msg>
        <status endtime="20241203 18:10:50.655" starttime="20241203 18:10:50.655" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20241203 18:10:50.656">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20241203 18:10:50.656" starttime="20241203 18:10:50.656" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20241203 18:10:50.656">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20241203 18:10:50.656" starttime="20241203 18:10:50.656" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20241203 18:10:50.657" starttime="20241203 18:10:50.657" status="NOT RUN"/>
          </kw>
          <status endtime="20241203 18:10:50.657" starttime="20241203 18:10:50.657" status="NOT RUN"/>
         </iter>
         <status endtime="20241203 18:10:50.657" starttime="20241203 18:10:50.656" status="NOT RUN"/>
        </for>
        <status endtime="20241203 18:10:50.657" starttime="20241203 18:10:50.655" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20241203 18:10:50.657" starttime="20241203 18:10:50.657" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20241203 18:10:50.658">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000020A4E110800&gt;
        </msg>
        <status endtime="20241203 18:10:50.658" starttime="20241203 18:10:50.657" status="PASS"/>
       </kw>
       <status endtime="20241203 18:10:50.658" starttime="20241203 18:10:50.651" status="PASS"/>
      </kw>
      <status endtime="20241203 18:10:50.658" starttime="20241203 18:10:45.671" status="PASS"/>
     </kw>
     <status endtime="20241203 18:10:50.658" starttime="20241203 18:10:45.671" status="PASS"/>
    </kw>
    <status endtime="20241203 18:10:50.658" starttime="20241203 18:10:45.670" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20241203 18:10:50.659">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20241203 18:10:50.659" starttime="20241203 18:10:50.658" status="PASS"/>
   </kw>
   <status endtime="20241203 18:10:50.659" starttime="20241203 18:10:45.665" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test VA42" source="C:\EID_Replay\EID_Parry\Tests\Test_VA42.robot">
   <kw library="VA42" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20241203 18:10:51.371">
      Sym.Dev.SAP_SERVER: C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20241203 18:10:51.371">
      Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe"
     </msg>
     <status endtime="20241203 18:10:51.385" starttime="20241203 18:10:51.370" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20241203 18:10:51.421" starttime="20241203 18:10:51.385" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('Rental_Connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20241203 18:10:51.422">
      Sym.Dev.Rental_Connection: EID sandbox
     </msg>
     <status endtime="20241203 18:10:52.044" starttime="20241203 18:10:51.421" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Rental_Client')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20241203 18:10:52.045">
      Sym.Dev.Rental_Client: 900
     </msg>
     <msg level="INFO" timestamp="20241203 18:10:52.099">
      Typing text '900' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20241203 18:10:52.099" starttime="20241203 18:10:52.044" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('Rental_User')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20241203 18:10:52.100">
      Sym.Dev.Rental_User: bcssupport1
     </msg>
     <msg level="INFO" timestamp="20241203 18:10:52.114">
      Typing text 'bcssupport1' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20241203 18:10:52.114" starttime="20241203 18:10:52.099" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{RENTAL_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20241203 18:10:52.124">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20241203 18:10:52.125" starttime="20241203 18:10:52.114" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20241203 18:10:52.306" starttime="20241203 18:10:52.125" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <msg level="INFO" timestamp="20241203 18:10:52.777">
      Multiple logon exists
     </msg>
     <status endtime="20241203 18:10:52.778" starttime="20241203 18:10:52.306" status="PASS"/>
    </kw>
    <status endtime="20241203 18:10:52.778" starttime="20241203 18:10:51.370" status="PASS"/>
   </kw>
   <test id="s1-s1-t1" line="9" name="Releasing the contracts blocks">
    <kw library="VA42" name="Release Block">
     <kw library="SAP_Tcode_Library" name="Extract Dates">
      <var>
       ${date}
      </var>
      <arg>
       json_string=${symvar('DateContent')}
      </arg>
      <msg level="INFO" timestamp="20241203 18:10:52.780">
       Sym.Dev.DateContent: {'startDate': '01.11.2024', 'endDate': '30.11.2024'}
      </msg>
      <msg level="INFO" timestamp="20241203 18:10:52.781">
       ${date} = ['01.11.2024', '30.11.2024']
      </msg>
      <status endtime="20241203 18:10:52.781" starttime="20241203 18:10:52.779" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Set Variable">
      <var>
       ${Rental_Start_Date}
      </var>
      <arg>
       ${date}[0]
      </arg>
      <doc>
       Returns the given values which can then be assigned to a variables.
      </doc>
      <msg level="INFO" timestamp="20241203 18:10:52.781">
       ${Rental_Start_Date} = 01.11.2024
      </msg>
      <status endtime="20241203 18:10:52.781" starttime="20241203 18:10:52.781" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nVA42
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20241203 18:10:53.040" starttime="20241203 18:10:52.782" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/ctxtVBAK-VBELN
      </arg>
      <arg>
       text=${symvar('documents')}
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20241203 18:10:53.041">
       Sym.Dev.documents: 40026191
      </msg>
      <msg level="INFO" timestamp="20241203 18:10:53.065">
       Typing text '40026191' into text field 'wnd[0]/usr/ctxtVBAK-VBELN'.
      </msg>
      <status endtime="20241203 18:10:53.065" starttime="20241203 18:10:53.040" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20241203 18:10:53.965" starttime="20241203 18:10:53.065" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20241203 18:10:54.966">
       Slept 1 second
      </msg>
      <status endtime="20241203 18:10:54.966" starttime="20241203 18:10:53.965" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/subSUBSCREEN_HEADER:SAPMV45A:4021/btnBT_HEAD
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20241203 18:10:55.390" starttime="20241203 18:10:54.966" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20241203 18:10:56.392">
       Slept 1 second
      </msg>
      <status endtime="20241203 18:10:56.392" starttime="20241203 18:10:55.390" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsTAXI_TABSTRIP_HEAD/tabpT\\05
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20241203 18:10:56.531" starttime="20241203 18:10:56.392" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20241203 18:10:57.532">
       Slept 1 second
      </msg>
      <status endtime="20241203 18:10:57.532" starttime="20241203 18:10:56.531" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Run Keyword And Ignore Error">
      <arg>
       Click Element
      </arg>
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Runs the given keyword with the given arguments and ignores possible error.
      </doc>
      <kw library="SAP_Tcode_Library" name="Click Element">
       <arg>
        wnd[1]/tbar[0]/btn[0]
       </arg>
       <doc>
        Performs a single click on a given element. Used only for buttons, tabs and menu items.
       </doc>
       <status endtime="20241203 18:10:57.842" starttime="20241203 18:10:57.532" status="PASS"/>
      </kw>
      <status endtime="20241203 18:10:57.842" starttime="20241203 18:10:57.532" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Get Row Count">
      <var>
       ${row}
      </var>
      <arg>
       wnd[0]/usr/tabsTAXI_TABSTRIP/tabpT\\05/ssubSUBSCREEN_BODY:SAPLV60F:4201/tblSAPLV60FTCTRL_FPLAN_PERIOD
      </arg>
      <doc>
       Returns the number of rows found in the specified table.
      </doc>
      <msg level="INFO" timestamp="20241203 18:10:57.854">
       ${row} = 21
      </msg>
      <status endtime="20241203 18:10:57.854" starttime="20241203 18:10:57.842" status="PASS"/>
     </kw>
     <for flavor="IN RANGE">
      <var>
       ${i}
      </var>
      <value>
       0
      </value>
      <value>
       ${row}
      </value>
      <iter>
       <var name="${i}">
        0
       </var>
       <kw library="BuiltIn" name="Run Keyword And Return Status">
        <var>
         ${is_visible}
        </var>
        <arg>
         Get Value
        </arg>
        <arg>
         wnd[0]/usr/tabsTAXI_TABSTRIP/tabpT\\05/ssubSUBSCREEN_BODY:SAPLV60F:4201/tblSAPLV60FTCTRL_FPLAN_PERIOD/ctxtRV60F-ABRBE[0,${i}]
        </arg>
        <doc>
         Runs the given keyword with given arguments and returns the status as a Boolean value.
        </doc>
        <kw library="SAP_Tcode_Library" name="Get Value">
         <arg>
          wnd[0]/usr/tabsTAXI_TABSTRIP/tabpT\\05/ssubSUBSCREEN_BODY:SAPLV60F:4201/tblSAPLV60FTCTRL_FPLAN_PERIOD/ctxtRV60F-ABRBE[0,${i}]
         </arg>
         <doc>
          Gets the value of the given element. The possible return values depend on the type of element (see Return values).
         </doc>
         <status endtime="20241203 18:10:57.889" starttime="20241203 18:10:57.855" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20241203 18:10:57.889">
         ${is_visible} = True
        </msg>
        <status endtime="20241203 18:10:57.889" starttime="20241203 18:10:57.855" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword If">
        <arg>
         "${is_visible}" == "False"
        </arg>
        <arg>
         Exit For Loop
        </arg>
        <doc>
         Runs the given keyword with the given arguments, if ``condition`` is true.
        </doc>
        <status endtime="20241203 18:10:57.890" starttime="20241203 18:10:57.889" status="PASS"/>
       </kw>
       <kw library="SAP_Tcode_Library" name="Get Value">
        <var>
         ${date}
        </var>
        <arg>
         wnd[0]/usr/tabsTAXI_TABSTRIP/tabpT\\05/ssubSUBSCREEN_BODY:SAPLV60F:4201/tblSAPLV60FTCTRL_FPLAN_PERIOD/ctxtRV60F-ABRBE[0,${i}]
        </arg>
        <doc>
         Gets the value of the given element. The possible return values depend on the type of element (see Return values).
        </doc>
        <msg level="INFO" timestamp="20241203 18:10:57.915">
         ${date} = 01.11.2024
        </msg>
        <status endtime="20241203 18:10:57.915" starttime="20241203 18:10:57.890" status="PASS"/>
       </kw>
       <if>
        <branch condition="'${date}' == '${Rental_Start_Date}'" type="IF">
         <kw library="VA42" name="Process rental invoice">
          <kw library="SAP_Tcode_Library" name="Send Vkey">
           <arg>
            2
           </arg>
           <doc>
            Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
           </doc>
           <status endtime="20241203 18:10:58.031" starttime="20241203 18:10:57.916" status="PASS"/>
          </kw>
          <kw library="SAP_Tcode_Library" name="Get Value">
           <var>
            ${block}
           </var>
           <arg>
            element_id=wnd[0]/usr/ctxtFPLT-FAKSP
           </arg>
           <doc>
            Gets the value of the given element. The possible return values depend on the type of element (see Return values).
           </doc>
           <msg level="INFO" timestamp="20241203 18:10:58.134">
            ${block} = 02
           </msg>
           <status endtime="20241203 18:10:58.134" starttime="20241203 18:10:58.032" status="PASS"/>
          </kw>
          <if>
           <branch condition="'${block}' == '02'" type="IF">
            <kw library="SAP_Tcode_Library" name="Input Text">
             <arg>
              wnd[0]/usr/ctxtFPLT-FAKSP
             </arg>
             <arg>
              ${EMPTY }
             </arg>
             <doc>
              Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
             </doc>
             <msg level="INFO" timestamp="20241203 18:10:58.157">
              Typing text '' into text field 'wnd[0]/usr/ctxtFPLT-FAKSP'.
             </msg>
             <status endtime="20241203 18:10:58.157" starttime="20241203 18:10:58.135" status="PASS"/>
            </kw>
            <kw library="SAP_Tcode_Library" name="Click Element">
             <arg>
              wnd[0]/tbar[0]/btn[3]
             </arg>
             <doc>
              Performs a single click on a given element. Used only for buttons, tabs and menu items.
             </doc>
             <status endtime="20241203 18:10:58.353" starttime="20241203 18:10:58.157" status="PASS"/>
            </kw>
            <kw library="SAP_Tcode_Library" name="Click Element">
             <arg>
              wnd[0]/tbar[0]/btn[3]
             </arg>
             <doc>
              Performs a single click on a given element. Used only for buttons, tabs and menu items.
             </doc>
             <status endtime="20241203 18:10:59.115" starttime="20241203 18:10:58.353" status="PASS"/>
            </kw>
            <kw library="SAP_Tcode_Library" name="Click Element">
             <arg>
              wnd[0]/tbar[0]/btn[11]
             </arg>
             <doc>
              Performs a single click on a given element. Used only for buttons, tabs and menu items.
             </doc>
             <status endtime="20241203 18:10:59.518" starttime="20241203 18:10:59.116" status="PASS"/>
            </kw>
            <kw library="BuiltIn" name="Log To Console">
             <arg>
              message=**gbStart**copilot_status_block**splitKeyValue**${symvar('documents')} Block released successfully..**gbEnd**
             </arg>
             <doc>
              Logs the given message to the console.
             </doc>
             <msg level="INFO" timestamp="20241203 18:10:59.519">
              Sym.Dev.documents: 40026191
             </msg>
             <status endtime="20241203 18:10:59.519" starttime="20241203 18:10:59.518" status="PASS"/>
            </kw>
            <status endtime="20241203 18:10:59.519" starttime="20241203 18:10:58.134" status="PASS"/>
           </branch>
           <branch condition="'${block}' == ''" type="ELSE IF">
            <kw library="SAP_Tcode_Library" name="Click Element">
             <arg>
              wnd[0]/tbar[0]/btn[3]
             </arg>
             <doc>
              Performs a single click on a given element. Used only for buttons, tabs and menu items.
             </doc>
             <status endtime="20241203 18:10:59.520" starttime="20241203 18:10:59.519" status="NOT RUN"/>
            </kw>
            <kw library="SAP_Tcode_Library" name="Click Element">
             <arg>
              wnd[0]/tbar[0]/btn[3]
             </arg>
             <doc>
              Performs a single click on a given element. Used only for buttons, tabs and menu items.
             </doc>
             <status endtime="20241203 18:10:59.520" starttime="20241203 18:10:59.520" status="NOT RUN"/>
            </kw>
            <kw library="SAP_Tcode_Library" name="Click Element">
             <arg>
              wnd[0]/tbar[0]/btn[11]
             </arg>
             <doc>
              Performs a single click on a given element. Used only for buttons, tabs and menu items.
             </doc>
             <status endtime="20241203 18:10:59.520" starttime="20241203 18:10:59.520" status="NOT RUN"/>
            </kw>
            <kw library="BuiltIn" name="Log To Console">
             <arg>
              message=**gbStart**copilot_status_block**splitKeyValue**${symvar('documents')} Block already in released state...**gbEnd**
             </arg>
             <doc>
              Logs the given message to the console.
             </doc>
             <status endtime="20241203 18:10:59.520" starttime="20241203 18:10:59.520" status="NOT RUN"/>
            </kw>
            <status endtime="20241203 18:10:59.520" starttime="20241203 18:10:59.519" status="NOT RUN"/>
           </branch>
           <status endtime="20241203 18:10:59.520" starttime="20241203 18:10:58.134" status="PASS"/>
          </if>
          <kw library="BuiltIn" name="Run Keyword And Ignore Error">
           <arg>
            Click Element
           </arg>
           <arg>
            wnd[1]/tbar[0]/btn[0]
           </arg>
           <doc>
            Runs the given keyword with the given arguments and ignores possible error.
           </doc>
           <kw library="SAP_Tcode_Library" name="Click Element">
            <arg>
             wnd[1]/tbar[0]/btn[0]
            </arg>
            <doc>
             Performs a single click on a given element. Used only for buttons, tabs and menu items.
            </doc>
            <status endtime="20241203 18:11:00.835" starttime="20241203 18:10:59.521" status="PASS"/>
           </kw>
           <status endtime="20241203 18:11:00.835" starttime="20241203 18:10:59.520" status="PASS"/>
          </kw>
          <kw library="BuiltIn" name="Sleep">
           <arg>
            time_=0.3 seconds
           </arg>
           <doc>
            Pauses the test executed for the given time.
           </doc>
           <msg level="INFO" timestamp="20241203 18:11:01.136">
            Slept 300 milliseconds
           </msg>
           <status endtime="20241203 18:11:01.136" starttime="20241203 18:11:00.835" status="PASS"/>
          </kw>
          <kw library="SAP_Tcode_Library" name="Get Value">
           <var>
            ${status}
           </var>
           <arg>
            wnd[0]/sbar/pane[0]
           </arg>
           <doc>
            Gets the value of the given element. The possible return values depend on the type of element (see Return values).
           </doc>
           <msg level="INFO" timestamp="20241203 18:11:01.145">
            ${status} = SUG Rental contract 40026191 has been saved.
           </msg>
           <status endtime="20241203 18:11:01.145" starttime="20241203 18:11:01.136" status="PASS"/>
          </kw>
          <kw library="BuiltIn" name="Log To Console">
           <arg>
            ${status}
           </arg>
           <doc>
            Logs the given message to the console.
           </doc>
           <status endtime="20241203 18:11:01.146" starttime="20241203 18:11:01.146" status="PASS"/>
          </kw>
          <status endtime="20241203 18:11:01.146" starttime="20241203 18:10:57.916" status="PASS"/>
         </kw>
         <kw library="BuiltIn" name="Exit For Loop">
          <doc>
           Stops executing the enclosing FOR loop.
          </doc>
          <msg level="INFO" timestamp="20241203 18:11:01.147">
           Exiting for loop altogether.
          </msg>
          <status endtime="20241203 18:11:01.147" starttime="20241203 18:11:01.147" status="PASS"/>
         </kw>
         <status endtime="20241203 18:11:01.147" starttime="20241203 18:10:57.915" status="PASS"/>
        </branch>
        <status endtime="20241203 18:11:01.147" starttime="20241203 18:10:57.915" status="PASS"/>
       </if>
       <status endtime="20241203 18:11:01.147" starttime="20241203 18:10:57.855" status="PASS"/>
      </iter>
      <status endtime="20241203 18:11:01.147" starttime="20241203 18:10:57.855" status="PASS"/>
     </for>
     <status endtime="20241203 18:11:01.147" starttime="20241203 18:10:52.779" status="PASS"/>
    </kw>
    <tag>
     Regression
    </tag>
    <tag>
     VA42
    </tag>
    <status endtime="20241203 18:11:01.147" starttime="20241203 18:10:52.778" status="PASS"/>
   </test>
   <kw library="VA42" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20241203 18:11:01.200" starttime="20241203 18:11:01.148" status="PASS"/>
    </kw>
    <status endtime="20241203 18:11:01.200" starttime="20241203 18:11:01.148" status="PASS"/>
   </kw>
   <status endtime="20241203 18:11:01.200" starttime="20241203 18:10:50.659" status="PASS"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   131.0.6778.86
  </meta>
  <meta name="test_driver_version">
   131.0.6778.85
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.3.5,attrs==24.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.8.30,cffi==1.17.1,chardet==5.2.0,charset-normalizer==3.4.0,click==8.1.7,colorama==0.4.6,comtypes==1.4.8,cryptography==43.0.3,defusedxml==0.7.1,dill==0.3.9,docutils==0.21.2,et_xmlfile==2.0.0,exceptiongroup==1.2.2,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.10,isort==5.13.2,Jinja2==3.1.4,jira==3.8.0,jsonpath-ng==1.7.0,jsonschema==4.23.0,jsonschema-specifications==2024.10.1,lazy-object-proxy==1.10.0,lxml==5.3.0,markdown-it-py==3.0.0,MarkupSafe==3.0.2,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,numpy==2.1.3,oauthlib==3.2.2,openpyxl==3.1.5,outcome==1.3.0.post0,packaging==24.2,pandas==2.2.3,pathspec==0.11.2,pillow==11.0.0,pip==24.3.1,platformdirs==4.3.6,ply==3.11,pycparser==2.22,Pygments==2.18.0,pylint==3.3.1,PySocks==1.7.1,python-dateutil==2.9.0.post0,pytz==2024.2,pywin32==308,pywinauto==0.6.8,PyYAML==6.0.2,referencing==0.35.1,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.9.4,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.21.0,selenium==4.9.1,setuptools==75.6.0,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.6,tomli==2.0.2,tomlkit==0.13.2,trio==0.27.0,trio-websocket==0.11.1,typing_extensions==4.12.2,tzdata==2024.2,urllib3==2.2.3,wheel==0.45.1,wrapt==1.17.0,wsproto==1.2.0
  </meta>
  <status endtime="20241203 18:11:01.282" starttime="20241203 18:10:45.276" status="PASS"/>
 </suite>
 <statistics>
  <total>
   <stat fail="0" pass="1" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="0" pass="1" skip="0">
    Regression
   </stat>
   <stat fail="0" pass="1" skip="0">
    VA42
   </stat>
  </tag>
  <suite>
   <stat fail="0" id="s1" name="Tests" pass="1" skip="0">
    Tests
   </stat>
   <stat fail="0" id="s1-s1" name="Test VA42" pass="1" skip="0">
    Tests.Test VA42
   </stat>
  </suite>
 </statistics>
 <errors>
 </errors>
</robot>
